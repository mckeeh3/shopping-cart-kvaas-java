syntax = "proto3";

import "google/protobuf/empty.proto";
import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";

package io.shopping.cart;

option java_outer_classname = "CartApi";

service ShoppingCartService {
  option (akkaserverless.service) = {
    type : SERVICE_TYPE_ENTITY
    component : "io.shopping.cart.entity.ShoppingCart"
  };

  rpc AddItem(AddLineItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/cart/{cart_id}/items/add"
      body : "*"
    };
  }

  rpc ChangeItem(ChangeLineItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cart/{cart_id}/items/{product_id}/change"
      body : "*"
    };
  }

  rpc RemoveItem(RemoveLineItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/cart/{cart_id}/items/{product_id}/remove"
    };
  }

  rpc CheckoutCart(CheckoutShoppingCart) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cart/{cart_id}/checkout"
    };
  }

  rpc ShippedCart(ShippedShoppingCart) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cart/{cart_id}/shipped"
    };
  }

  rpc DeliveredCart(DeliveredShoppingCart) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put : "/cart/{cart_id}/delivered"
    };
  }

  rpc DeleteCart(DeleteShoppingCart) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/cart/{cart_id}/delete"
    };
  }

  rpc GetCart(GetShoppingCart) returns (ShoppingCart) {
    option (google.api.http) = {
      get : "/cart/{cart_id}"
    };
  }
}

message AddLineItem {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
  string customer_id = 2;
  string product_id = 3;
  string product_name = 4;
  int32 quantity = 5;
}

message ChangeLineItem {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
  string product_id = 2;
  int32 quantity = 3;
}

message RemoveLineItem {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
  string product_id = 2;
}

message CheckoutShoppingCart {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
}

message ShippedShoppingCart {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
}

message DeliveredShoppingCart {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
}

message DeleteShoppingCart {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
}

message GetShoppingCart {
  string cart_id = 1 [ (akkaserverless.field).entity_key = true ];
}

message ShoppingCart {
  string cart_id = 1;
  string customer_id = 2;
  string checked_out_utc = 3;
  string shipped_utc = 4;
  string delivered_utc = 5;
  string deleted_utc = 6;
  repeated LineItem line_items = 7;
}

message LineItem {
  string product_id = 1;
  string product_name = 2;
  int32 quantity = 3;
}